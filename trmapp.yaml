---
apiVersion: "v1"
kind: "Namespace"
metadata:
  name: "trmapp1"
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "trmapp1"
  namespace: "trmapp1"
  labels:
    app: "trmapp1"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "trmapp1"
  template:
    metadata:
      labels:
        app: "trmapp1"
    spec:
      containers:
        - name: "trmapp-1"
          image: "gcr.io/sapient-biplane-308511/trmapp"
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: database
                  key: host
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: database
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: database
                  key: password
---
apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "trmapp1-hpa-xuwy"
  namespace: "trmapp1"
  labels:
    app: "trmapp1"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "trmapp1"
    apiVersion: "apps/v1"
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: "Resource"
      resource:
        name: "cpu"
        targetAverageUtilization: 80
---
apiVersion: "v1"
kind: "Service" # Use this instead of Ingress to avoid needing a proxy subnet
metadata:
  name: "trmapp1-service"
  namespace: "trmapp1"
  annotations:
    networking.gke.io/load-balancer-type: "Internal"
  labels:
    app: "trmapp1"
spec:
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 8080
  selector:
    app: "trmapp1"
  type: "LoadBalancer"
  loadBalancerSourceRanges:
    - 10.150.0.0/20  # my us-east4 default subnet
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "trmapp1-service-external"
  namespace: "trmapp1"
  labels:
    app: "trmapp1"
spec:
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 8080
  selector:
    app: "trmapp1"
  type: "NodePort"
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: trmapp1-ingress-external
  namespace: trmapp1
spec:
  backend:
    serviceName: trmapp1-service-external
    servicePort: 80
